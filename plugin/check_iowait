#!/usr/bin/env bash


if [ -z "${BASE_DIR}" ]; then
	path=$(cd $(dirname $0) && pwd)  
	BASE_DIR=${path%/*}
	source ${BASE_DIR}/bin/include 2>&-
fi




# Return Codes
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_NOOP=4

# Set Default
EXIT_STATUS=0
LEVEL=    	### { ok | warn | crit | unknown }
TYPE=    	### { str| file }
CONTENT=        ### { strings | /path/to/result.file }

# Read plugin config value here
uplimit=$( read_eminfo_config check_iowait uplimit )

# if null return STATE_UNKNOWN.

# if null or invalid set default.
[ -z "${uplimit}" -o ! -z "${uplimit//[0-9]}" ] && uplimit=15

# check function here
check(){

  if [ ! -x "/usr/bin/vmstat" ]; then
	EXIT_STATUS=${STATE_UNKNOWN};
	LEVEL="unknown";
	TYPE="str";
	CONTENT="Command: [/usr/bin/vmstat] not prepared.";
	return
  fi

  local p_usage=$( /usr/bin/vmstat 1 5 | tail -n +3 | awk '{x+=$16} END{print x/5}' 2>&1 )
  [ -z "${p_usage}" -o ! -z "${p_usage//[0-9.]}" ] && {
	EXIT_STATUS=${STATE_UNKNOWN};
        LEVEL="unknown";
        TYPE="str";
        CONTENT="Retuen is not numberic: ["${p_usage}"]";
	return 
  }

  if [ "$(echo  "${p_usage} >= ${uplimit}" | bc 2>&-)" == "1" ]; then
	EXIT_STATUS=${STATE_CRITICAL};
	LEVEL="crit";
	TYPE="str";
	CONTENT="CPU IO-WAIT Check CRITICAL | IOWAIT Average Usage: [${p_usage}]% | Usage: [${p_usage}%] >= UpLimit: [${uplimit}%] "
  else
	EXIT_STATUS=${STATE_OK};
	LEVEL="ok";
	TYPE="str";
	CONTENT="CPU IO-WAIT Check OK | IOWAIT Average Usage: [${p_usage}%] <= UpLimit: [${uplimit}%] "
  fi
}

check

# output result and return exit status here.
echo "{"${LEVEL}"}:{"${TYPE}"}:{"${CONTENT}"}"  | tr -d '\015\012'
exit ${EXIT_STATUS}
