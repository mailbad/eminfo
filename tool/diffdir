#!/usr/bin/env bash


### Help
##
show_help() {
cat << EOF
Usage:  ./${0##*/}  srcdir  dstdir
EOF
exit 0
}

### Build MD5DB
##
build_md5db() {
  local dirname=$1
  [ -z "${dirname}" -o ! -d "${dirname}" ] && {
	echo "please check your input [${dirname}]. exit"
	exit 1
  }
  cd "${dirname}" >/dev/null 2>&1
  if [ "$?" == "0" ]; then
  	find . -follow -type f -exec /usr/bin/md5sum {} \;  2>&-
  else
	echo "change to directory [${dirname}] failed. exit"
	exit 1
  fi
}


##### Main Body Begin

### check input args
srcdir=$(echo "$1"|sed -e 's#/$##')
dstdir=$(echo "$2"|sed -e 's#/$##')
[ -z "${srcdir}" -o -z "${dstdir}" ] && show_help
[ ! -d "${srcdir}" -o ! -d "${dstdir}" ] && {
  echo "[${srcdir}] or [${dstdir}] is not an exist directory."
  exit 1
}

### build md5sum database
echo -e "building md5sum database ... \c "
build_md5db "${srcdir}" > /tmp/.srcdir.md5db
build_md5db "${dstdir}" > /tmp/.dstdir.md5db
wait
src_files=$( awk '{$1="";print;}' /tmp/.srcdir.md5db )
dst_files=$( awk '{$1="";print;}' /tmp/.dstdir.md5db )
echo -e " [Done]"

### check add / delete
echo -e "checking add / delete files ... \c "
tmp_files=$( echo -e "${src_files}\n""${dst_files}" | sort | uniq -u )  ### \n is important
src_only=$( echo -e "${src_files}\n""${tmp_files}" | sort | uniq -d | sed -e 's#^ .#'${srcdir}'#' )
dst_only=$( echo -e "${dst_files}\n""${tmp_files}" | sort | uniq -d | sed -e 's#^ .#'${dstdir}'#' )
echo -e " [Done]"

### check modify 
echo -e "checking modify files ... \c "
mod_files=$( while read  -a line ; do awk -v s="${srcdir}" -v d="${dstdir}" '( $1!="'"${line[0]}"'" && $2=="'"${line[1]}"'" ) {gsub(/ *\.\//,"/",$2);printf "run:diff %s%s %s%s\n",s,$2,d,$2;exit;}' /tmp/.dstdir.md5db ; done < /tmp/.srcdir.md5db )
echo -e " [Done]"

### output result.
logfile="/var/log/diffdir.result"
{ 
echo -e "\nResult:\n"
echo -e "Files Only in [${srcdir}]:"
echo -e "${src_only}"
echo -e "\n"
echo -e "Files Only in [${dstdir}]:"
echo -e "${dst_only}"
echo -e "\n"
echo -e "Files Different:"
echo -e "${mod_files}" | column -t
} | tee "${logfile}"

echo -e "\nResult File: [${logfile}]\n"
