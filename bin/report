#!/usr/bin/env bash
#
#
# This Script Responsible for Report Plugin's Last Running Record.
# 
# Usage:     ./report {plugin_name}
# 	     ./report all
#
# Example:   ./takesnap check_sysload
# Example:   ./takesnap all
#


[ -z ${BASE_DIR} ]  && {
        path=$( cd $(dirname $0) && pwd)
        BASE_DIR=${path%/*}
        source ${BASE_DIR}/bin/include 2>&-
}

show_usage(){
  echo "Usage:   ./${0##*/} {plugin_name}"
  echo "Example: ./${0##*/} check_sysload"
  echo "Example: ./${0##*/} all"
  exit 1
}

print_record(){
  local pname=${1//[ ]} ts= result= line= level= type= title= summary= body= content=
  local aline="=========================================================="
  local output=
  if [ -f "${TMP_RECORD}" -a -s "${TMP_RECORD}" ]; then
	line=$(awk '(/^'${pname}'\> /){print;exit;}' "${TMP_RECORD}" 2>&-)
	if [ -z "${line//[ ]}" ]; then
		ts="-"
		result="No Record, Maybe Never been Running"
		output="\nPlugin: ${pname}\nTime: ${ts}\nResult: ${result}\n"
	else
		ts=$(echo -e "${line}" | awk '{print $2}')
		ts=$(date -d "1970-01-01 UTC ${ts} seconds" +%F_%T 2>&-)
		result=$(echo -e "${line}" | awk '{$1=$2="";print;exit;}')
		if [ "$(echo -n "${result}" | awk -v RS="{[^{]*}" 'END{print NR}')" == "3" ]; then
			level=$(read_output 1 "${result}"); level=$(echo -e "${level}" | tr '[a-z]' '[A-Z]')
			type=$(read_output 2 "${result}")
			case "${type}" in 
			"str")
				title=$(read_output 4 "${result}")
				[ -z "${title//[ ]}" ] && title= || title="Title: ${title}"
				summary=$(read_output 5 "${result}")
				[ -z "${summary//[ ]}" ] && summary= || summary="Summary: ${summary}"
				body=$(trim_html "$(read_output 6 "${result}")" )
				[ -z "${body//[ ]}" ] && body= || body="Details: ${body}"
				content="${title}\n${summary}\n${body}\n"
				output="\nPlugin: ${pname}\nTime: ${ts}\nResult:\nLevel: ${level}\nType: Strings\n${content}\n"
				;;
			"file")
				files=$(read_output 3 "${result}")
				output="\nPlugin: ${pname}\nTime: ${ts}\nResult:\nLevel: ${level}\nType: Files\nFiles: ${files}\n"
				;;
			*)
				local part3=$(read_output 3 "${result}")
				output="\nPlugin: ${pname}\nTime: ${ts}\nResult:\nOutput Type Invalid\n ${part3}\n"
				;;
			esac
		else
			output="\nPlugin: ${pname}\nTime: ${ts}\nResult: ${result}\n"
		fi
	fi
  	echo -e "\n${output}\n${aline}\n"
	return 0
  else
	echo_yellow "Record File NOT Exist or Empty" ; echo
	return 1
  fi
}



plugin_name=${1//[ ]}
[ -z "${plugin_name}" ] && show_usage
if [ "${plugin_name}" == "all" ]; then
	for p in `list_plugin_section`
  	do
		print_record "${p}"
  	done
else
  	print_record "${plugin_name}"
fi
